webpackJsonp([20],{"./node_modules/txt-to-ast/index.js":function(module,exports,__webpack_require__){"use strict";module.exports={parse:__webpack_require__("./node_modules/txt-to-ast/lib/plaintext-parser.js"),Syntax:__webpack_require__("./node_modules/txt-to-ast/lib/plaintext-syntax.js")}},"./node_modules/txt-to-ast/lib/plaintext-parser.js":function(module,exports,__webpack_require__){"use strict";function parseLine(lineText,lineNumber,startIndex){return{type:Syntax.Str,raw:lineText,value:lineText,range:[startIndex,startIndex+lineText.length],loc:{start:{line:lineNumber,column:0},end:{line:lineNumber,column:lineText.length}}}}function createEndedBRNode(prevNode){return{type:Syntax.Break,raw:"\n",value:"\n",range:[prevNode.range[1],prevNode.range[1]+1],loc:{start:{line:prevNode.loc.end.line,column:prevNode.loc.end.column},end:{line:prevNode.loc.end.line,column:prevNode.loc.end.column+1}}}}function createBRNode(lineNumber,startIndex){return{type:Syntax.Break,raw:"\n",range:[startIndex,startIndex+1],loc:{start:{line:lineNumber,column:0},end:{line:lineNumber,column:1}}}}function createParagraph(nodes){var firstNode=nodes[0],lastNode=nodes[nodes.length-1];return{type:Syntax.Paragraph,raw:nodes.map(function(node){return node.raw}).join(""),range:[firstNode.range[0],lastNode.range[1]],loc:{start:{line:firstNode.loc.start.line,column:firstNode.loc.start.column},end:{line:lastNode.loc.end.line,column:lastNode.loc.end.column}},children:nodes}}function parse(text){var textLineByLine=text.split(LINEBREAKE_MARK),startIndex=0,lastLineIndex=textLineByLine.length-1,isLasEmptytLine=function(line,index){return index===lastLineIndex&&""===line},isEmptyLine=function(line,index){return index!==lastLineIndex&&""===line},children=textLineByLine.reduce(function(result,currentLine,index){var lineNumber=index+1;if(isLasEmptytLine(currentLine,index))return result;if(isEmptyLine(currentLine,index)){var emptyBreakNode=createBRNode(lineNumber,startIndex);return startIndex+=emptyBreakNode.raw.length,result.push(emptyBreakNode),result}var strNode=parseLine(currentLine,lineNumber,startIndex),paragraph=createParagraph([strNode]);if(startIndex+=paragraph.raw.length,result.push(paragraph),index!==lastLineIndex){var breakNode=createEndedBRNode(paragraph);startIndex+=breakNode.raw.length,result.push(breakNode)}return result},[]);return{type:Syntax.Document,raw:text,range:[0,text.length],loc:{start:{line:1,column:0},end:{line:textLineByLine.length,column:textLineByLine[textLineByLine.length-1].length}},children:children}}var Syntax=__webpack_require__("./node_modules/txt-to-ast/lib/plaintext-syntax.js"),LINEBREAKE_MARK=/\r?\n/g;module.exports=parse},"./node_modules/txt-to-ast/lib/plaintext-syntax.js":function(module,exports){"use strict";var exports={Document:"Document",Paragraph:"Paragraph",Str:"Str",Break:"Break"};module.exports=exports}});